/****************************************************************************
** Copyright (C) 2013-2018 Mazatech S.r.l. All rights reserved.
**
** This file is part of AmanithSVG software, an SVG rendering engine.
**
** W3C (World Wide Web Consortium) and SVG are trademarks of the W3C.
** OpenGL is a registered trademark and OpenGL ES is a trademark of
** Silicon Graphics, Inc.
**
** This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
** WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
**
** For any information, please contact info@mazatech.com
**
****************************************************************************/

package com.mazatech.svgt;

public enum SVGTError {

    None(AmanithSVG.SVGT_NO_ERROR),
    Uninitialized(AmanithSVG.SVGT_NOT_INITIALIZED_ERROR),
    BadHandle(AmanithSVG.SVGT_BAD_HANDLE_ERROR),
    IllegalArgument(AmanithSVG.SVGT_ILLEGAL_ARGUMENT_ERROR),
    OutOfMemory(AmanithSVG.SVGT_OUT_OF_MEMORY_ERROR),
    XMLParser(AmanithSVG.SVGT_PARSER_ERROR),
    // returned when the library detects that outermost element is not an <svg> element or there is a circular dependency (usually generated by <use> elements)
    InvalidSVG(AmanithSVG.SVGT_INVALID_SVG_ERROR),
    StillPacking(AmanithSVG.SVGT_STILL_PACKING_ERROR),
    NotPacking(AmanithSVG.SVGT_NOT_PACKING_ERROR),
    Unknown(AmanithSVG.SVGT_UNKNOWN_ERROR);

    SVGTError(int svgtEnum) {
        
        _svgtEnum = svgtEnum;
    }

    public int getValue() {

        return _svgtEnum;
    }

    public static SVGTError fromValue(int svgtEnum) {

        return _allValues[svgtEnum];
    }

    private final int _svgtEnum;
    private static SVGTError[] _allValues = values();
}
